"Problem","Package","File","Priority","Line","Description","Rule set","Rule"
"1","(default)","src/ApplicationImpl.java","3","7","All classes and interfaces must belong to a named package","Naming Rules","NoPackage"
"2","(default)","src/ApplicationImpl.java","3","14","Parameter 'sessionId' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"3","(default)","src/ApplicationImpl.java","2","15","System.out.print is used","Java Logging Rules","SystemPrintln"
"4","(default)","src/ApplicationImpl.java","3","23","Parameter 'sessionId' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"5","(default)","src/ApplicationImpl.java","2","24","System.out.print is used","Java Logging Rules","SystemPrintln"
"6","(default)","src/ApplicationImpl.java","3","32","Parameter 'sessionId' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"7","(default)","src/ApplicationImpl.java","2","33","System.out.print is used","Java Logging Rules","SystemPrintln"
"8","(default)","src/ApplicationImpl.java","3","42","Parameter 'message' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"9","(default)","src/ApplicationImpl.java","3","42","Parameter 'sessionId' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"10","(default)","src/ApplicationImpl.java","2","43","System.out.print is used","Java Logging Rules","SystemPrintln"
"11","(default)","src/ApplicationImpl.java","2","55","System.out.print is used","Java Logging Rules","SystemPrintln"
"12","(default)","src/Entrance.java","3","8","All classes and interfaces must belong to a named package","Naming Rules","NoPackage"
"13","(default)","src/Entrance.java","3","8","All methods are static.  Consider using Singleton instead.  Alternatively, you could add a private constructor or make the class abstract to silence this warning.","Design Rules","UseSingleton"
"14","(default)","src/Entrance.java","3","11","Avoid excessively long variable names like PLEASE_PROVIDE_ARGS","Naming Rules","LongVariable"
"15","(default)","src/Entrance.java","3","17","JUnit 4 tests that execute tests should use the @Test annotation","Migration Rules","JUnit4TestShouldUseTestAnnotation"
"16","(default)","src/Entrance.java","3","18","Avoid variables with short names like i","Naming Rules","ShortVariable"
"17","(default)","src/Entrance.java","3","18","Local variable 'i' could be declared final","Optimization Rules","LocalVariableCouldBeFinal"
"18","(default)","src/Entrance.java","3","20","A method should have only one exit point, and that should be the last statement in the method","Controversial Rules","OnlyOneReturn"
"19","(default)","src/Entrance.java","3","30","A method/constructor shouldn't explicitly throw java.lang.Exception","Type Resolution Rules","SignatureDeclareThrowsException"
"20","(default)","src/Entrance.java","3","30","A method/constructor shouldn't explicitly throw java.lang.Exception","Type Resolution Rules","SignatureDeclareThrowsException"
"21","(default)","src/Entrance.java","3","30","Parameter 'args' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"22","(default)","src/Entrance.java","5","32","Found 'DU'-anomaly for variable 'logger' (lines '32'-'67').","Controversial Rules","DataflowAnomalyAnalysis"
"23","(default)","src/Entrance.java","3","32","Local variable 'logger' could be declared final","Optimization Rules","LocalVariableCouldBeFinal"
"24","(default)","src/Entrance.java","3","36","A method should have only one exit point, and that should be the last statement in the method","Controversial Rules","OnlyOneReturn"
"25","(default)","src/Entrance.java","3","42","Avoid variables with short names like b","Naming Rules","ShortVariable"
"26","(default)","src/Entrance.java","3","44","Use equals() to compare object references.","Design Rules","CompareObjectsWithEquals"
"27","(default)","src/Entrance.java","3","46","A method should have only one exit point, and that should be the last statement in the method","Controversial Rules","OnlyOneReturn"
"28","(default)","src/Entrance.java","3","49","Local variable 'opo' could be declared final","Optimization Rules","LocalVariableCouldBeFinal"
"29","(default)","src/Entrance.java","3","56","Local variable 'application' could be declared final","Optimization Rules","LocalVariableCouldBeFinal"
"30","(default)","src/Entrance.java","3","57","Local variable 'settings' could be declared final","Optimization Rules","LocalVariableCouldBeFinal"
"31","(default)","src/Messages.java","1","6","A class which only has private constructors should be final","Design Rules","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"32","(default)","src/Messages.java","3","6","All classes and interfaces must belong to a named package","Naming Rules","NoPackage"
"33","(default)","src/Messages.java","3","7","Avoid excessively long variable names like MESSAGES_NOT_IMPLEMENTED","Naming Rules","LongVariable"
"34","(default)","src/Messages.java","3","18","Parameter 'key' is not assigned and could be declared final","Optimization Rules","MethodArgumentCouldBeFinal"
"35","(default)","src/Messages.java","3","20","A method should have only one exit point, and that should be the last statement in the method","Controversial Rules","OnlyOneReturn"
